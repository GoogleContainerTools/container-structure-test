load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "create.go",
        "delete.go",
        "init.go",
        "main.go",
        "start.go",
        "utils.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "checkpoint.go",
            "events.go",
            "exec.go",
            "kill.go",
            "list.go",
            "notify_socket.go",
            "pause.go",
            "ps.go",
            "restore.go",
            "rlimit_linux.go",
            "run.go",
            "signals.go",
            "spec.go",
            "state.go",
            "tty.go",
            "update.go",
            "utils_linux.go",
        ],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:private"],
    deps = [
        "//vendor/github.com/Sirupsen/logrus:go_default_library",
        "//vendor/github.com/opencontainers/runc/libcontainer:go_default_library",
        "//vendor/github.com/opencontainers/runc/libcontainer/nsenter:go_default_library",
        "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        "//vendor/github.com/urfave/cli:go_default_library",
        "//vendor/golang.org/x/sys/unix:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "//vendor/github.com/coreos/go-systemd/activation:go_default_library",
            "//vendor/github.com/docker/docker/pkg/term:go_default_library",
            "//vendor/github.com/docker/go-units:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/cgroups:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/cgroups/systemd:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/configs:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/specconv:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/system:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/user:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/utils:go_default_library",
        ],
        "//conditions:default": [],
    }),
)

go_binary(
    name = "runc",
    library = ":go_default_library",
    visibility = ["//visibility:public"],
)
