load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "client.go",
        "container.go",
        "process.go",
        "remote.go",
        "types.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "pausemonitor_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "pausemonitor_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "pausemonitor_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "pausemonitor_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "client_linux.go",
            "client_unix.go",
            "container_unix.go",
            "oom_linux.go",
            "pausemonitor_unix.go",
            "process_unix.go",
            "queue_unix.go",
            "remote_unix.go",
            "types_linux.go",
            "utils_linux.go",
        ],
        "@io_bazel_rules_go//go/platform:nacl": [
            "pausemonitor_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:netbsd": [
            "pausemonitor_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "pausemonitor_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:plan9": [
            "pausemonitor_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "client_solaris.go",
            "client_unix.go",
            "container_unix.go",
            "oom_solaris.go",
            "pausemonitor_unix.go",
            "process_unix.go",
            "queue_unix.go",
            "remote_unix.go",
            "types_solaris.go",
            "utils_solaris.go",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "client_windows.go",
            "container_windows.go",
            "process_windows.go",
            "remote_windows.go",
            "types_windows.go",
            "utils_windows.go",
        ],
        "//conditions:default": [],
    }),
    importpath = "github.com/docker/docker/libcontainerd",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/containerd/containerd/api/grpc/types:go_default_library",
        "//vendor/github.com/docker/docker/pkg/locker:go_default_library",
        "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux": [
            "//vendor/github.com/containerd/containerd/runtime:go_default_library",
            "//vendor/github.com/docker/docker/pkg/idtools:go_default_library",
            "//vendor/github.com/docker/docker/pkg/ioutils:go_default_library",
            "//vendor/github.com/docker/docker/pkg/mount:go_default_library",
            "//vendor/github.com/docker/docker/pkg/system:go_default_library",
            "//vendor/github.com/golang/protobuf/ptypes:go_default_library",
            "//vendor/github.com/golang/protobuf/ptypes/timestamp:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/system:go_default_library",
            "//vendor/github.com/sirupsen/logrus:go_default_library",
            "//vendor/github.com/tonistiigi/fifo:go_default_library",
            "//vendor/golang.org/x/sys/unix:go_default_library",
            "//vendor/google.golang.org/grpc:go_default_library",
            "//vendor/google.golang.org/grpc/grpclog:go_default_library",
            "//vendor/google.golang.org/grpc/health/grpc_health_v1:go_default_library",
            "//vendor/google.golang.org/grpc/transport:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "//vendor/github.com/docker/docker/pkg/idtools:go_default_library",
            "//vendor/github.com/docker/docker/pkg/ioutils:go_default_library",
            "//vendor/github.com/docker/docker/pkg/system:go_default_library",
            "//vendor/github.com/golang/protobuf/ptypes:go_default_library",
            "//vendor/github.com/golang/protobuf/ptypes/timestamp:go_default_library",
            "//vendor/github.com/sirupsen/logrus:go_default_library",
            "//vendor/github.com/tonistiigi/fifo:go_default_library",
            "//vendor/golang.org/x/sys/unix:go_default_library",
            "//vendor/google.golang.org/grpc:go_default_library",
            "//vendor/google.golang.org/grpc/grpclog:go_default_library",
            "//vendor/google.golang.org/grpc/health/grpc_health_v1:go_default_library",
            "//vendor/google.golang.org/grpc/transport:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "//vendor/github.com/Microsoft/hcsshim:go_default_library",
            "//vendor/github.com/Microsoft/opengcs/client:go_default_library",
            "//vendor/github.com/docker/docker/pkg/ioutils:go_default_library",
            "//vendor/github.com/docker/docker/pkg/sysinfo:go_default_library",
            "//vendor/github.com/docker/docker/pkg/system:go_default_library",
            "//vendor/github.com/sirupsen/logrus:go_default_library",
            "//vendor/golang.org/x/sys/windows:go_default_library",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "go_default_test",
    srcs = select({
        "@io_bazel_rules_go//go/platform:linux": [
            "queue_unix_test.go",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "queue_unix_test.go",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "utils_windows_test.go",
        ],
        "//conditions:default": [],
    }),
    embed = [":go_default_library"],
    importpath = "github.com/docker/docker/libcontainerd",
    deps = select({
        "@io_bazel_rules_go//go/platform:linux": [
            "//vendor/github.com/stretchr/testify/require:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "//vendor/github.com/stretchr/testify/require:go_default_library",
        ],
        "//conditions:default": [],
    }),
)
