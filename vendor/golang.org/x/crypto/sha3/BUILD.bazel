load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "doc.go",
        "hashes.go",
        "register.go",
        "sha3.go",
        "shake.go",
        "xor_generic.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:386": [
            "keccakf.go",
            "xor_unaligned.go",
        ],
        "@io_bazel_rules_go//go/platform:amd64": [
            "keccakf_amd64.go",
            "keccakf_amd64.s",
            "xor_unaligned.go",
        ],
        "@io_bazel_rules_go//go/platform:amd64p32": [
            "keccakf.go",
            "xor.go",
        ],
        "@io_bazel_rules_go//go/platform:arm": [
            "keccakf.go",
            "xor.go",
        ],
        "@io_bazel_rules_go//go/platform:arm64": [
            "keccakf.go",
            "xor.go",
        ],
        "@io_bazel_rules_go//go/platform:mips": [
            "keccakf.go",
            "xor.go",
        ],
        "@io_bazel_rules_go//go/platform:mips64": [
            "keccakf.go",
            "xor.go",
        ],
        "@io_bazel_rules_go//go/platform:mips64le": [
            "keccakf.go",
            "xor.go",
        ],
        "@io_bazel_rules_go//go/platform:mipsle": [
            "keccakf.go",
            "xor.go",
        ],
        "@io_bazel_rules_go//go/platform:ppc64": [
            "keccakf.go",
            "xor.go",
        ],
        "@io_bazel_rules_go//go/platform:ppc64le": [
            "keccakf.go",
            "xor_unaligned.go",
        ],
        "@io_bazel_rules_go//go/platform:s390x": [
            "keccakf.go",
            "xor.go",
        ],
        "//conditions:default": [],
    }),
    importpath = "golang.org/x/crypto/sha3",
    visibility = ["//visibility:public"],
)

go_test(
    name = "go_default_test",
    srcs = ["sha3_test.go"],
    data = glob(["testdata/**"]),
    embed = [":go_default_library"],
    importpath = "golang.org/x/crypto/sha3",
)
