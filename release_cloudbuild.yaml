steps:
# Build the image
  - name: 'gcr.io/cloud-builders/bazel'
    args: ['run', '//:structure_test_image']
# Tag the built image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'tag', 'bazel:structure_test_image',
      'gcr.io/gcp-runtimes/container-structure-test:$TAG_NAME'
    ]
# Tag the new image as latest
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'tag', 'bazel:structure_test_image',
      'gcr.io/gcp-runtimes/container-structure-test:latest'
    ]

# Build the linux binary
  - name: 'gcr.io/cloud-builders/bazel'
    args: ['build', '//:container_structure_test']
# Upload the linux binary to GCS release tag bucket
  - name: 'gcr.io/cloud-builders/gsutil'
    args: [
      'cp', 'bazel-bin/linux_amd64_pure_stripped/container_structure_test',
      'gs://container-structure-test/$TAG_NAME/container-structure-test-linux-amd64'
    ]
# Upload the linux binary to GCS latest bucket
  - name: 'gcr.io/cloud-builders/gsutil'
    args: [
      'cp', 'bazel-bin/linux_amd64_pure_stripped/container_structure_test',
      'gs://container-structure-test/latest/container-structure-test-linux-amd64'
    ]

# Build the OS X binary
  - name: 'gcr.io/cloud-builders/bazel'
    args: [
      'build',
      '--platforms=@io_bazel_rules_go//go/toolchain:darwin_amd64',
      '//:container_structure_test'
    ]
# Upload the OS X binary to GCS release tag bucket
  - name: 'gcr.io/cloud-builders/gsutil'
    args: [
      'cp', 'bazel-bin/darwin_amd64_pure_stripped/container_structure_test',
      'gs://container-structure-test/$TAG_NAME/container-structure-test-darwin-amd64'
    ]
# Upload the OS X binary to GCS latest bucket
  - name: 'gcr.io/cloud-builders/gsutil'
    args: [
      'cp', 'bazel-bin/darwin_amd64_pure_stripped/container_structure_test',
      'gs://container-structure-test/latest/container-structure-test-darwin-amd64'
    ]

images: [
  'gcr.io/gcp-runtimes/container-structure-test:$TAG_NAME',
  'gcr.io/gcp-runtimes/container-structure-test:latest'
]
